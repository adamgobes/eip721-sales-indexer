// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AuctionApprovalUpdated extends ethereum.Event {
  get params(): AuctionApprovalUpdated__Params {
    return new AuctionApprovalUpdated__Params(this);
  }
}

export class AuctionApprovalUpdated__Params {
  _event: AuctionApprovalUpdated;

  constructor(event: AuctionApprovalUpdated) {
    this._event = event;
  }

  get auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokenContract(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class AuctionBid extends ethereum.Event {
  get params(): AuctionBid__Params {
    return new AuctionBid__Params(this);
  }
}

export class AuctionBid__Params {
  _event: AuctionBid;

  constructor(event: AuctionBid) {
    this._event = event;
  }

  get auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokenContract(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get firstBid(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }

  get extended(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }
}

export class AuctionCanceled extends ethereum.Event {
  get params(): AuctionCanceled__Params {
    return new AuctionCanceled__Params(this);
  }
}

export class AuctionCanceled__Params {
  _event: AuctionCanceled;

  constructor(event: AuctionCanceled) {
    this._event = event;
  }

  get auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokenContract(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokenOwner(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class AuctionCreated extends ethereum.Event {
  get params(): AuctionCreated__Params {
    return new AuctionCreated__Params(this);
  }
}

export class AuctionCreated__Params {
  _event: AuctionCreated;

  constructor(event: AuctionCreated) {
    this._event = event;
  }

  get auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokenContract(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get duration(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get reservePrice(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get tokenOwner(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get curator(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get curatorFeePercentage(): i32 {
    return this._event.parameters[7].value.toI32();
  }

  get auctionCurrency(): Address {
    return this._event.parameters[8].value.toAddress();
  }
}

export class AuctionDurationExtended extends ethereum.Event {
  get params(): AuctionDurationExtended__Params {
    return new AuctionDurationExtended__Params(this);
  }
}

export class AuctionDurationExtended__Params {
  _event: AuctionDurationExtended;

  constructor(event: AuctionDurationExtended) {
    this._event = event;
  }

  get auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokenContract(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get duration(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class AuctionEnded extends ethereum.Event {
  get params(): AuctionEnded__Params {
    return new AuctionEnded__Params(this);
  }
}

export class AuctionEnded__Params {
  _event: AuctionEnded;

  constructor(event: AuctionEnded) {
    this._event = event;
  }

  get auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokenContract(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokenOwner(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get curator(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get winner(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get curatorFee(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get auctionCurrency(): Address {
    return this._event.parameters[8].value.toAddress();
  }
}

export class AuctionReservePriceUpdated extends ethereum.Event {
  get params(): AuctionReservePriceUpdated__Params {
    return new AuctionReservePriceUpdated__Params(this);
  }
}

export class AuctionReservePriceUpdated__Params {
  _event: AuctionReservePriceUpdated;

  constructor(event: AuctionReservePriceUpdated) {
    this._event = event;
  }

  get auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokenContract(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get reservePrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class AuctionHouse__auctionsResult {
  value0: BigInt;
  value1: Address;
  value2: boolean;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: i32;
  value8: Address;
  value9: Address;
  value10: Address;
  value11: Address;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: boolean,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: i32,
    value8: Address,
    value9: Address,
    value10: Address,
    value11: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set(
      "value7",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value7))
    );
    map.set("value8", ethereum.Value.fromAddress(this.value8));
    map.set("value9", ethereum.Value.fromAddress(this.value9));
    map.set("value10", ethereum.Value.fromAddress(this.value10));
    map.set("value11", ethereum.Value.fromAddress(this.value11));
    return map;
  }
}

export class AuctionHouse extends ethereum.SmartContract {
  static bind(address: Address): AuctionHouse {
    return new AuctionHouse("AuctionHouse", address);
  }

  auctions(param0: BigInt): AuctionHouse__auctionsResult {
    let result = super.call(
      "auctions",
      "auctions(uint256):(uint256,address,bool,uint256,uint256,uint256,uint256,uint8,address,address,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new AuctionHouse__auctionsResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toBoolean(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toI32(),
      result[8].toAddress(),
      result[9].toAddress(),
      result[10].toAddress(),
      result[11].toAddress()
    );
  }

  try_auctions(
    param0: BigInt
  ): ethereum.CallResult<AuctionHouse__auctionsResult> {
    let result = super.tryCall(
      "auctions",
      "auctions(uint256):(uint256,address,bool,uint256,uint256,uint256,uint256,uint8,address,address,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AuctionHouse__auctionsResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toBoolean(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toI32(),
        value[8].toAddress(),
        value[9].toAddress(),
        value[10].toAddress(),
        value[11].toAddress()
      )
    );
  }

  createAuction(
    tokenId: BigInt,
    tokenContract: Address,
    duration: BigInt,
    reservePrice: BigInt,
    curator: Address,
    curatorFeePercentage: i32,
    auctionCurrency: Address
  ): BigInt {
    let result = super.call(
      "createAuction",
      "createAuction(uint256,address,uint256,uint256,address,uint8,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromAddress(tokenContract),
        ethereum.Value.fromUnsignedBigInt(duration),
        ethereum.Value.fromUnsignedBigInt(reservePrice),
        ethereum.Value.fromAddress(curator),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(curatorFeePercentage)),
        ethereum.Value.fromAddress(auctionCurrency)
      ]
    );

    return result[0].toBigInt();
  }

  try_createAuction(
    tokenId: BigInt,
    tokenContract: Address,
    duration: BigInt,
    reservePrice: BigInt,
    curator: Address,
    curatorFeePercentage: i32,
    auctionCurrency: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createAuction",
      "createAuction(uint256,address,uint256,uint256,address,uint8,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(tokenId),
        ethereum.Value.fromAddress(tokenContract),
        ethereum.Value.fromUnsignedBigInt(duration),
        ethereum.Value.fromUnsignedBigInt(reservePrice),
        ethereum.Value.fromAddress(curator),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(curatorFeePercentage)),
        ethereum.Value.fromAddress(auctionCurrency)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minBidIncrementPercentage(): i32 {
    let result = super.call(
      "minBidIncrementPercentage",
      "minBidIncrementPercentage():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_minBidIncrementPercentage(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "minBidIncrementPercentage",
      "minBidIncrementPercentage():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  timeBuffer(): BigInt {
    let result = super.call("timeBuffer", "timeBuffer():(uint256)", []);

    return result[0].toBigInt();
  }

  try_timeBuffer(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("timeBuffer", "timeBuffer():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  wethAddress(): Address {
    let result = super.call("wethAddress", "wethAddress():(address)", []);

    return result[0].toAddress();
  }

  try_wethAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("wethAddress", "wethAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  zora(): Address {
    let result = super.call("zora", "zora():(address)", []);

    return result[0].toAddress();
  }

  try_zora(): ethereum.CallResult<Address> {
    let result = super.tryCall("zora", "zora():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _zora(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _weth(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class CancelAuctionCall extends ethereum.Call {
  get inputs(): CancelAuctionCall__Inputs {
    return new CancelAuctionCall__Inputs(this);
  }

  get outputs(): CancelAuctionCall__Outputs {
    return new CancelAuctionCall__Outputs(this);
  }
}

export class CancelAuctionCall__Inputs {
  _call: CancelAuctionCall;

  constructor(call: CancelAuctionCall) {
    this._call = call;
  }

  get auctionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelAuctionCall__Outputs {
  _call: CancelAuctionCall;

  constructor(call: CancelAuctionCall) {
    this._call = call;
  }
}

export class CreateAuctionCall extends ethereum.Call {
  get inputs(): CreateAuctionCall__Inputs {
    return new CreateAuctionCall__Inputs(this);
  }

  get outputs(): CreateAuctionCall__Outputs {
    return new CreateAuctionCall__Outputs(this);
  }
}

export class CreateAuctionCall__Inputs {
  _call: CreateAuctionCall;

  constructor(call: CreateAuctionCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tokenContract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get duration(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get reservePrice(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get curator(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get curatorFeePercentage(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get auctionCurrency(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class CreateAuctionCall__Outputs {
  _call: CreateAuctionCall;

  constructor(call: CreateAuctionCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateBidCall extends ethereum.Call {
  get inputs(): CreateBidCall__Inputs {
    return new CreateBidCall__Inputs(this);
  }

  get outputs(): CreateBidCall__Outputs {
    return new CreateBidCall__Outputs(this);
  }
}

export class CreateBidCall__Inputs {
  _call: CreateBidCall;

  constructor(call: CreateBidCall) {
    this._call = call;
  }

  get auctionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreateBidCall__Outputs {
  _call: CreateBidCall;

  constructor(call: CreateBidCall) {
    this._call = call;
  }
}

export class EndAuctionCall extends ethereum.Call {
  get inputs(): EndAuctionCall__Inputs {
    return new EndAuctionCall__Inputs(this);
  }

  get outputs(): EndAuctionCall__Outputs {
    return new EndAuctionCall__Outputs(this);
  }
}

export class EndAuctionCall__Inputs {
  _call: EndAuctionCall;

  constructor(call: EndAuctionCall) {
    this._call = call;
  }

  get auctionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EndAuctionCall__Outputs {
  _call: EndAuctionCall;

  constructor(call: EndAuctionCall) {
    this._call = call;
  }
}

export class SetAuctionApprovalCall extends ethereum.Call {
  get inputs(): SetAuctionApprovalCall__Inputs {
    return new SetAuctionApprovalCall__Inputs(this);
  }

  get outputs(): SetAuctionApprovalCall__Outputs {
    return new SetAuctionApprovalCall__Outputs(this);
  }
}

export class SetAuctionApprovalCall__Inputs {
  _call: SetAuctionApprovalCall;

  constructor(call: SetAuctionApprovalCall) {
    this._call = call;
  }

  get auctionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetAuctionApprovalCall__Outputs {
  _call: SetAuctionApprovalCall;

  constructor(call: SetAuctionApprovalCall) {
    this._call = call;
  }
}

export class SetAuctionReservePriceCall extends ethereum.Call {
  get inputs(): SetAuctionReservePriceCall__Inputs {
    return new SetAuctionReservePriceCall__Inputs(this);
  }

  get outputs(): SetAuctionReservePriceCall__Outputs {
    return new SetAuctionReservePriceCall__Outputs(this);
  }
}

export class SetAuctionReservePriceCall__Inputs {
  _call: SetAuctionReservePriceCall;

  constructor(call: SetAuctionReservePriceCall) {
    this._call = call;
  }

  get auctionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get reservePrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetAuctionReservePriceCall__Outputs {
  _call: SetAuctionReservePriceCall;

  constructor(call: SetAuctionReservePriceCall) {
    this._call = call;
  }
}
